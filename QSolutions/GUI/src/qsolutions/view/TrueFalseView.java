/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package qsolutions.view;

import java.io.File;
import org.openide.util.Lookup;
import qsolutions.api.DocumentItemApi;
import qsolutions.api.TrueFalseApi;

/**
 * GUI view for the true false question
 * @author Chris
 */
public final class TrueFalseView extends QuestionView
{
    /**
     * Creates new form TrueFalseView
     */
    public TrueFalseView()
    {
        super();
        item = Lookup.getDefault().lookup(TrueFalseApi.class).newItem();
        setEditView(false);
        initComponents();
        fillFields();
    }
    
    /**
     * Initalizes the true false view
     * @param nItem api whos information will be extracted
     */
    public TrueFalseView(TrueFalseApi nItem) 
    {
        super();
        item = nItem;
        setEditView(true);
        initComponents();
        fillFields();
        addDocumentItem.setText(kBundle.getString("UPDATE QUESTION"));
    }

    /**
     * Fills the gui from inItem, sets isEditView to true
     * @param inItem the item to load information from
     */
    @Override
    protected void fillFields( DocumentItemApi inItem )
    {
        TrueFalseApi tQuestion = ( TrueFalseApi ) inItem;
        questionHeaderPanel.fillFields( tQuestion );
        trueText.setText( tQuestion.getChoice1() );
        falseText.setText( tQuestion.getChoice2() );
        trueButton.setSelected( tQuestion.getChoice1().equals(
                tQuestion.getAnswer() ) );
        falseButton.setSelected( tQuestion.getChoice2().equals(
                tQuestion.getAnswer() ) );
        examNavigatorPanel.refreshView(isEditView());
    }
    
    /**
     * Returns a TrueFalse constructed from the fields in the gui
     * @return TrueFalse constructed from the gui fields
     */
    @Override
    protected TrueFalseApi extractItem()
    {
        TrueFalseApi toAdd =
                Lookup.getDefault().lookup(TrueFalseApi.class).newItem();
        questionHeaderPanel.extractQuestion( toAdd );
        //toAdd.picture; // TODO Fix
        toAdd.setChoice1( trueText.getText(), trueButton.isSelected() );
        toAdd.setChoice2( falseText.getText(), falseButton.isSelected() );
        imageChanged = questionHeaderPanel.imageChanged;
        // If is an edit view and the image is unchanged
        if ( isEditView() && !imageChanged )
        {
            toAdd.setShallowImage(item);
        }

        return toAdd;
    }

    /**
     * Stores item appropriately in exam
     */
    @Override
    public void addItem()
    {
        super.addItem();
        item = Lookup.getDefault().lookup(TrueFalseApi.class).newItem();
        fillFields();
        addDocumentItem.setText( kBundle.getString("ADD QUESTION") );
    }
    
    /**
     * Return the attached image file being displayed in the view
     * @return the image file being displayed in the view
     */
    @Override
    public File getImageFile()
    {
        return questionHeaderPanel.getStoredImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //GEN-BEGIN
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        choiceGroup = new javax.swing.ButtonGroup();
        addDocumentItem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        trueButton = new javax.swing.JRadioButton();
        falseButton = new javax.swing.JRadioButton();
        trueText = new javax.swing.JTextField();
        falseText = new javax.swing.JTextField();
        questionHeaderPanel = new qsolutions.view.QuestionHeaderPanel();
        examNavigatorPanel = new ExamNavigatorPanel(this);

        addDocumentItem.setText(org.openide.util.NbBundle.getMessage(TrueFalseView.class, "TrueFalseView.addDocumentItem.text")); // NOI18N
        addDocumentItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDocumentItemActionPerformed(evt);
            }
        });

        jLabel2.setText(org.openide.util.NbBundle.getMessage(TrueFalseView.class, "TrueFalseView.jLabel2.text")); // NOI18N

        choiceGroup.add(trueButton);
        trueButton.setFocusable(false);

        choiceGroup.add(falseButton);
        falseButton.setFocusable(false);

        trueText.setText(org.openide.util.NbBundle.getMessage(TrueFalseView.class, "TrueFalseView.trueText.text")); // NOI18N

        falseText.setText(org.openide.util.NbBundle.getMessage(TrueFalseView.class, "TrueFalseView.falseText.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(falseButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(falseText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addDocumentItem))
                    .addComponent(questionHeaderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(trueButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(trueText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(examNavigatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(examNavigatorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(questionHeaderPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(trueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(trueButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(falseButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(falseText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addDocumentItem)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    //GEN-END
    /**
     * Event handler for addQuestionButton
     * @param evt unused
     */
    private void addDocumentItemActionPerformed( java.awt.event.ActionEvent evt )//GEN-FIRST:event_addDocumentItemActionPerformed
    {//GEN-HEADEREND:event_addDocumentItemActionPerformed
        addItem();
    }//GEN-LAST:event_addDocumentItemActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDocumentItem;
    private javax.swing.ButtonGroup choiceGroup;
    private qsolutions.view.ExamNavigatorPanel examNavigatorPanel;
    private javax.swing.JRadioButton falseButton;
    private javax.swing.JTextField falseText;
    private javax.swing.JLabel jLabel2;
    private qsolutions.view.QuestionHeaderPanel questionHeaderPanel;
    private javax.swing.JRadioButton trueButton;
    private javax.swing.JTextField trueText;
    // End of variables declaration//GEN-END:variables
}
