/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package qsolutions.view;

import java.util.ResourceBundle;
import org.openide.util.Lookup;
import org.openide.windows.WindowManager;
import qsolutions.api.ExamApi;
import qsolutions.gui.TableViewTopComponent;

/**
 * A panel indicating selected index in the exam and DocumentItem type
 * @author Ryan Dollahon
 */
public final class ExamNavigatorPanel extends javax.swing.JPanel
{
    private static final String kBundleName = "qsolutions/view/Bundle";
    private static final ResourceBundle kBundle =
            ResourceBundle.getBundle(kBundleName);
    
    private boolean editView;
    /**
     * Creates new form ExamNavigatorPanel
     */
    public ExamNavigatorPanel()
    {
        initComponents();
        editView = false;
        posLabel.setText(kBundle.getString("NEW ITEM"));
    }
    
    /**
     * Creates new form ExamNavigatorPanel with the view's type in typeLabel
     * @param view the view to get type from
     */
    public ExamNavigatorPanel(DocumentItemView view)
    {
        initComponents();
        refreshView(view.isEditView());
        typeLabel.setText(view.getType());
    }
    
    /**
     * Refreshes this panel with the new editView trait
     * @param nEditView true if the DocumentItemView isEditView(), 
     * otherwise false
     */
    public void refreshView(boolean nEditView)
    {
        editView = nEditView;
        // If the DocumentItemView isEditView()
        if (editView)
        {
            TableViewTopComponent tv = 
                    (TableViewTopComponent) WindowManager.getDefault()
                        .findTopComponent("TableViewTopComponent");
            int pos = tv.getAnchoredRow();
            setPos(pos);
        }
        else
        {
            posLabel.setText(kBundle.getString("NEW ITEM"));
        }
    }
    
    /**
     * Set the labels with the relevant member data
     * @param pos the position of the item in the Exam
     */
    private void setPos(int pos)
    {
        // If the position is 0 or more
        if (pos > -1)
        {
            ExamApi exam = Lookup.getDefault().lookup(ExamApi.class);
            int ttl = exam.getNumItems();
            posLabel.setText((pos + 1) + " " + kBundle.getString("OF") +
                    " " + ttl);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // GEN-BEGIN
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        firstLabel = new javax.swing.JLabel();
        prevLabel = new javax.swing.JLabel();
        posLabel = new javax.swing.JLabel();
        nextLabel = new javax.swing.JLabel();
        lastLabel = new javax.swing.JLabel();
        typeLabel = new javax.swing.JLabel();

        jButton1.setText(org.openide.util.NbBundle.getMessage(ExamNavigatorPanel.class, "ExamNavigatorPanel.jButton1.text")); // NOI18N

        firstLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tinyFirst.png"))); // NOI18N
        firstLabel.setText(org.openide.util.NbBundle.getMessage(ExamNavigatorPanel.class, "ExamNavigatorPanel.firstLabel.text")); // NOI18N
        firstLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                firstLabelMouseClicked(evt);
            }
        });

        prevLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tinyPrevious.png"))); // NOI18N
        prevLabel.setText(org.openide.util.NbBundle.getMessage(ExamNavigatorPanel.class, "ExamNavigatorPanel.prevLabel.text")); // NOI18N
        prevLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prevLabelMouseClicked(evt);
            }
        });

        posLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        posLabel.setText(org.openide.util.NbBundle.getMessage(ExamNavigatorPanel.class, "ExamNavigatorPanel.posLabel.text")); // NOI18N

        nextLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tinyNext.png"))); // NOI18N
        nextLabel.setText(org.openide.util.NbBundle.getMessage(ExamNavigatorPanel.class, "ExamNavigatorPanel.nextLabel.text")); // NOI18N
        nextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nextLabelMouseClicked(evt);
            }
        });

        lastLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/tinyLast.png"))); // NOI18N
        lastLabel.setText(org.openide.util.NbBundle.getMessage(ExamNavigatorPanel.class, "ExamNavigatorPanel.lastLabel.text")); // NOI18N
        lastLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lastLabelMouseClicked(evt);
            }
        });

        typeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        typeLabel.setText(org.openide.util.NbBundle.getMessage(ExamNavigatorPanel.class, "ExamNavigatorPanel.typeLabel.text")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(firstLabel)
                .add(18, 18, 18)
                .add(prevLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(posLabel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 95, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(nextLabel)
                .add(18, 18, 18)
                .add(lastLabel)
                .add(18, 18, 18)
                .add(typeLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(typeLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(lastLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(nextLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(prevLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(firstLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, posLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // GEN-END

    private void firstLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_firstLabelMouseClicked
    {//GEN-HEADEREND:event_firstLabelMouseClicked
        int ret = ((TableViewTopComponent) WindowManager.getDefault()
                .findTopComponent("TableViewTopComponent")).selectFirst();
        setPos(ret);
    }//GEN-LAST:event_firstLabelMouseClicked

    private void prevLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_prevLabelMouseClicked
    {//GEN-HEADEREND:event_prevLabelMouseClicked
        int ret = ((TableViewTopComponent) WindowManager.getDefault()
                .findTopComponent("TableViewTopComponent")).selectPrevious();
        setPos(ret);
    }//GEN-LAST:event_prevLabelMouseClicked

    private void nextLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_nextLabelMouseClicked
    {//GEN-HEADEREND:event_nextLabelMouseClicked
        int ret = ((TableViewTopComponent) WindowManager.getDefault()
                .findTopComponent("TableViewTopComponent")).selectNext();
        setPos(ret);
    }//GEN-LAST:event_nextLabelMouseClicked

    private void lastLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_lastLabelMouseClicked
    {//GEN-HEADEREND:event_lastLabelMouseClicked
        int ret = ((TableViewTopComponent) WindowManager.getDefault()
                .findTopComponent("TableViewTopComponent")).selectLast();
        setPos(ret);
    }//GEN-LAST:event_lastLabelMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel firstLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lastLabel;
    private javax.swing.JLabel nextLabel;
    private javax.swing.JLabel posLabel;
    private javax.swing.JLabel prevLabel;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
}
